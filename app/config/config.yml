imports:
    - { resource: parameters_default.yml }
    - { resource: parameters_service.yml, ignore_errors: true }
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    # esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        assets_version: 7.2.13
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        handler_id:     session.handler.factory
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    paths:
        "%kernel.root_dir%/../web/customize": customize
        "%kernel.root_dir%/../src/Topxia/WebBundle/Resources/views": topxiaweb
        "%kernel.root_dir%/../web/themes": theme
        "%kernel.root_dir%/../" : root
    globals:
        disabled_features: %disabled_features%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        types:
            enum: Topxia\Common\DoctrineEnumType
        connections:
            default:
                wrapper_class: Topxia\Service\Common\Connection
                driver:   %database_driver%
                host:     %database_host%
                port:     %database_port%
                dbname:   %database_name%
                user:     %database_user%
                password: %database_password%
                charset:  UTF8

                mapping_types:
                    enum: string

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
# swiftmailer:
#     transport: %mailer_transport%
#     host:      %mailer_host%
#     username:  %mailer_user%
#     password:  %mailer_password%
    #spool:     { type: memory }

#jms_security_extra:
#    secure_controllers:  true
#    secure_all_services: false

parameters:
    session.handler.pdo.options:
         db_table:    sessions
         db_id_col:   sess_id
         db_data_col: sess_data
         db_time_col: sess_time
         db_lifetime_col: sess_lifetime
         db_user_id_col: sess_user_id

    topxia.disk.local_directory: "%kernel.root_dir%/data/udisk"
    topxia.disk.cloud_video_fop: "avthumb/mp4/r/30/vb/512k/vcodec/libx264/ar/22050/ab/64k/acodec/libfaac"
    topxia.disk.upgrade_dir: "%kernel.root_dir%/data/upgrade"
    topxia.disk.update_dir: "%kernel.root_dir%/data/upgrade"
    topxia.disk.backup_dir: "%kernel.root_dir%/data/backup"
    topxia.upload.public_directory: "%kernel.root_dir%/../web/files"
    topxia.upload.public_url_path: "/files"
    topxia.upload.private_directory: "%kernel.root_dir%/data/private_files"
    templating.asset.path_package.class: Topxia\WebBundle\Twig\Asset\PathPackage

services:
    app.locale_listener:
        class: Topxia\WebBundle\Listener\LocaleListener
        arguments: ['%kernel.default_locale%']
        tags:
            - { name: kernel.event_subscriber }
    app.user_locale_listener:
        class: Topxia\WebBundle\Listener\UserLocaleListener
        arguments: ['@session']
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }
    session.handler.pdo.connection:
        class: PDO
        calls:
            - [setAttribute, [3, 2]]

        arguments:
            dsn:      "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            user:     %database_user%
            password: %database_password%

    session.handler.pdo:
        class:     Topxia\WebBundle\Handler\UserPdoSessionHandler
        arguments: ['@session.handler.pdo.connection', '%session.handler.pdo.options%', '@security.context', '@service_container']

    session.handler.redis.factory:
        class: Topxia\Service\Common\Redis\RedisFactory
        factory_class: Topxia\Service\Common\Redis\RedisFactory
        factory_method: instance
        arguments:
            - "@service_container"

    session.handler.redis:
        class:     Topxia\WebBundle\Handler\RedisSessionHandler
        arguments: ['@session.handler.redis.factory', '@security.context']

    session.handler.factory:
        class: SessionHandlerInterface
        factory_class: Topxia\Service\Common\SessionHandlerFactory
        factory_method: getSessionHandler
        arguments:
            - "@service_container"

    kernel.listener.ajax_exception_listener:
        class: Topxia\WebBundle\Listener\AjaxExceptionListener
        arguments:    ['@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority:255 }

    kernel.listener.kernel_request_listener:
        class: Topxia\WebBundle\Listener\KernelRequestListener
        arguments:    ['@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority:255 }

#    kernel.listener.kernel_org_controller_listener:
#        class: Org\OrgBundle\Listener\OrgControllerListener
#        arguments:    ['@service_container']
#        tags:
#            - { name: kernel.event_listener, event: kernel.controller, method: onOrgController, priority:255 }

    kernel.listener.kernel_response_listener:
        class: Topxia\WebBundle\Listener\KernelResponseListener
        arguments:    ['@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse, priority:255 }

    topxia.twig.web_extension:
        class: Topxia\WebBundle\Twig\Extension\WebExtension
        arguments:    ['@service_container']
        tags:
            - { name: twig.extension }

    topxia.twig.html_extension:
        class: Topxia\WebBundle\Twig\Extension\HtmlExtension
        tags:
            - { name: twig.extension }

    topxia.twig.dictionary_extension:
        class: Topxia\WebBundle\Twig\Extension\DictionaryExtension
        tags:
            - { name: twig.extension }

    topxia.twig.data_extension:
        class: Topxia\WebBundle\Twig\Extension\DataExtension
        tags:
            - { name: twig.extension }

    topxia.twig.block_extension:
        class: Topxia\WebBundle\Twig\Extension\BlockExtension
        arguments:    ['@service_container']
        tags:
            - { name: twig.extension }

    topxia.twig.uploader_extension:
        class: Topxia\WebBundle\Twig\Extension\UploaderExtension
        arguments:    ['@service_container']
        tags:
            - { name: twig.extension }

    topxia.twig.theme_extension:
        class: Topxia\WebBundle\Twig\Extension\ThemeExtension
        arguments:    ['@service_container']
        tags:
            - { name: twig.extension }

    topxia.twig.order_extension:
        class: Topxia\WebBundle\Twig\Extension\OrderExtension
        arguments:    ['@service_container']
        tags:
            - { name: twig.extension }

    topxia.twig.file_cache:
        class: Topxia\Service\Common\FilesystemCache
        arguments:    ['%kernel.root_dir%/cache']

    topxia.twig.cache_provider:
        class: Asm89\Twig\CacheExtension\CacheProvider\DoctrineCacheAdapter
        arguments:    ['@topxia.twig.file_cache']

    topxia.twig.cache_strategy:
        class: Topxia\Service\Common\LifetimeCacheStrategy
        arguments:    ['@topxia.twig.cache_provider']

    topxia.twig.cache_extension:
        class: Asm89\Twig\CacheExtension\Extension
        arguments:    ['@topxia.twig.cache_strategy']
        tags:
            - { name: twig.extension }

    kernel.listener.user_login_token_listener:
        class: Topxia\WebBundle\Listener\UserLoginTokenListener
        arguments:    ['@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onGetUserLoginListener}
